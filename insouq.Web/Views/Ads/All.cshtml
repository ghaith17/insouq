@using insouq.Shared.Utility
@model insouq.Web.ViewModels.AllAdsVM
<div class="container">
    <!-- Trigger the modal with a button -->
    <!-- Modal -->
    <div class="modal fade" id="reportAdModal" role="dialog">
        <div class="modal-dialog dialog-padding">

            <!-- Modal content-->
            <div class="modal5-styles">
                <div class="modal-header-styles2">
                    <h4 class="title-dir">Report This Ad</h4>

                    <button type="button" id="closeReportAdModal" class="close-style7" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">
                    <div class="new-password-style">
                        <select id="reportReason">
                            <option value="reason1">Reason for reporting</option>
                            <option value="reason2">Reason for reporting</option>
                            <option value="reason3">Reason for reporting</option>
                            <option value="reason4">Reason for reporting</option>
                            <option value="reason5">Reason for reporting</option>
                            <option value="reason6">Reason for reporting</option>

                        </select>
                        <input class="" type="text" id="reportDescription" placeholder="Description of reporting">
                    </div>

                    <button type="button" class="signin-btn5" name="button" onclick="ReportAd()">Submit</button>

                </div>

            </div>

        </div>
    </div>

</div>
<div class="notification-style">
    <div id="list-view" class="tab-pane fade active show  trending-cat">
        <div class="row">
            <div class="col-md-3">
                <div class="featured-box1">
                    <div class="container">
                        <!-- Trigger the modal with a button -->
                        <!-- Modal -->
                        <div class="modal fade" id="myModal19" role="dialog">
                            <div class="modal-dialog dialog-padding">
                                <!-- Modal content-->
                                <div class="modal5-styles">
                                    <div class="modal-header-styles2">

                                        <button type="button" id="closeMyModal19" class="close-style7" data-dismiss="modal">&times;</button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="par-style">
                                            <h4 class="emailme">Email me when ads match this search</h4>
                                        </div>

                                        <div id="saveSearchError" style="display:none;margin-left:65px;margin-bottom:10px;">
                                            <span id="saveSearchErrorMessage" style="color:red;"></span>
                                        </div>
                                        <form>
                                            @if (User.Identity.IsAuthenticated)
                                            {
                                                <button type="button" class="signin-btn5" onclick="SaveFillters()" name="button">Save</button>
                                            }
                                            else
                                            {
                                                <button type="button" class="signin-btn5" onclick="ShowLogin()" name="button">Save</button>
                                            }
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <h1 class="filter-title">
                        Filters <span id="saveTheSearchBtnContainer">
                            @if (!string.IsNullOrEmpty(Model.SearchLocation))
                            {
                                <button class="saved-fil" disabled style="cursor: no-drop" id="saveTheSearchBtn">
                                    Saved
                                    <i class="fa fa-bookmark margin-bell" aria-hidden="true"></i>
                                </button>
                            }
                            else
                            {
                                <button class="saved-fil" data-toggle="modal" data-target="#myModal19" id="saveTheSearchBtn">
                                    Save
                                    <i class="far fa-bookmark margin-bell" aria-hidden="true"></i>
                                </button>
                            }

                        </span>
                    </h1>



                    <!-- <h3 class="filter-title1">Category</h3>
                                <select class="line-input-style13 change-color">
                      <option value="">Category</option>
                      <option value="">Category</option>
                      <option value="">Category</option>
                    </select> -->

                    @if (Model.TypeId == StaticData.Motors_ID)
                    {
                        <h3 class="filter-title2">Motors</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        if (Model.CategoryId == StaticData.UsedCars_ID || Model.CategoryId == StaticData.ExportCar_ID)
                        {
                            <h3 class="filter-title1">Brand</h3>
                            <select class="line-input-style13 change-color" id="makerDL">
                                <option value="">All Brands</option>
                            </select>

                            <h3 class="filter-title1">Model</h3>
                            <select class="line-input-style13 change-color" id="modelDL">
                                <option value="">All Models</option>
                            </select>


                            <h3 class="filter-title1">Trim</h3>
                            <select class="line-input-style13 change-color" id="trimDL">
                                <option value="">All Trims</option>
                            </select>

                            <h3 class="filter-title1">Year</h3>
                            <div class="price-range-block">
                                <div id="slider-year-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=1900 max="2021" oninput="validity.valid||(value='1900');" id="min_year" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=1900 max="2021" oninput="validity.valid||(value='2021');" id="max_year" class="line-input-style12" />
                                </div>
                            </div>


                            <h3 class="filter-title1">Mileage (in KMs)</h3>
                            <div class="price-range-block">
                                <div id="slider-km-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="9000000" oninput="validity.valid||(value='0');" id="min_km"
                                           class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="9000000" oninput="validity.valid||(value='9000000');" id="max_km" class="line-input-style12" />
                                </div>
                            </div>

                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='50000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>

                        }
                        else if (Model.CategoryId == StaticData.Boats_ID)
                        {

                            <h3 class="filter-title1">Cateogry</h3>
                            <select class="line-input-style13 change-color" id="subCategoryDL">
                                <option value="">All Categories</option>
                            </select>

                            <h3 class="filter-title1">Age</h3>
                            <select class="line-input-style13 change-color" id="ageDL">
                                <option value="">All Ages</option>
                            </select>

                            <h3 class="filter-title1">Usage</h3>
                            <select class="line-input-style13 change-color" id="usageDL">
                                <option value="">All Usage</option>
                            </select>

                            <h3 class="filter-title1">Warranty</h3>
                            <select class="line-input-style13 change-color" id="warranty">
                                <option value="">Don't Care</option>
                                <option value="true">Yes</option>
                                <option value="false">No</option>
                            </select>

                            <h3 class="filter-title1">Horsepower</h3>
                            <select class="line-input-style13 change-color" id="HorsepowerDL">
                                <option value="">All Horsepowers</option>
                            </select>

                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='50000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>

                        }
                        else if (Model.CategoryId == StaticData.Machinery_ID)
                        {

                            <h3 class="filter-title1">Mechanical Cateogry</h3>
                            <select class="line-input-style13 change-color" id="subCategoryDL">
                                <option value="">All Categories</option>
                            </select>

                            <h3 class="filter-title1">Sub Cateogry</h3>
                            <select class="line-input-style13 change-color" id="subTypeDL">
                                <option value="">All Sub Categories</option>
                            </select>

                           

                            <h3 class="filter-title1">Warranty</h3>
                            <select class="line-input-style13 change-color" id="warranty">
                                <option value="">Don't Care</option>
                                <option value="true">Yes</option>
                                <option value="false">No</option>
                            </select>

                            <h3 class="filter-title1">Horsepower</h3>
                            <select class="line-input-style13 change-color" id="HorsepowerDL">
                                <option value="">All Horsepowers</option>
                            </select>

                            <h3 class="filter-title1">Year</h3>
                            <div class="price-range-block">
                                <div id="slider-year-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=1900 max="2021" oninput="validity.valid||(value='1900');" id="min_year" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=1990 max="2021" oninput="validity.valid||(value='2021');" id="max_year" class="line-input-style12" />
                                </div>
                            </div>

                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='50000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>
                        }
                        else if (Model.CategoryId == StaticData.Parts_ID)
                        {
                            <h3 class="filter-title1">Parts Cateogry</h3>
                            <select class="line-input-style13 change-color" id="subCategoryDL">
                                <option value="">All Categories</option>
                            </select>

                            <h3 class="filter-title1">Make</h3>
                            <select class="line-input-style13 change-color" id="subTypeDL">
                                <option value="">All Makes</option>
                            </select>

                            <h3 class="filter-title1">In which part of the car ?</h3>
                            <select class="line-input-style13 change-color" id="partName">
                                <option value="">All Parts</option>
                            </select>

                            <h3 class="filter-title1">Year</h3>
                            <div class="price-range-block">
                                <div id="slider-year-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=1900 max="2021" oninput="validity.valid||(value='1900');" id="min_year" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=1990 max="2021" oninput="validity.valid||(value='2021');" id="max_year" class="line-input-style12" />
                                </div>
                            </div>

                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='50000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>

                        }
                        else if (Model.CategoryId == StaticData.Bike_ID)
                        {
                            <h3 class="filter-title1">Bike Cateogry</h3>
                            <select class="line-input-style13 change-color" id="subCategoryDL">
                                <option value="">All Categories</option>
                            </select>

                            <h3 class="filter-title1">Maker</h3>
                            <select class="line-input-style13 change-color" id="subTypeDL">
                                <option value="">All Makers</option>
                            </select>

                            <h3 class="filter-title1">Ad Posted</h3>
                            <select class="line-input-style13 change-color" id="postedInDL">
                                <option value="">All times</option>
                                <option value="1">Today</option>
                                <option value="2">This week</option>
                                <option value="3">This month</option>
                                <option value="4">This year</option>
                            </select>

                            <h3 class="filter-title1">Mileage (in KMs)</h3>
                            <div class="price-range-block">
                                <div id="slider-km-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="9000000" oninput="validity.valid||(value='0');" id="min_km"
                                           class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="9000000" oninput="validity.valid||(value='9000000');" id="max_km" class="line-input-style12" />
                                </div>
                            </div>

                            <h3 class="filter-title1">Year</h3>
                            <div class="price-range-block">
                                <div id="slider-year-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=1900 max="2021" oninput="validity.valid||(value='1900');" id="min_year" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=1990 max="2021" oninput="validity.valid||(value='2021');" id="max_year" class="line-input-style12" />
                                </div>
                            </div>

                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="50000000" oninput="validity.valid||(value='50000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>

                        }
                    }
                    else if (Model.TypeId == StaticData.Numbers_ID)
                    {
                        <h3 class="filter-title2">Numbers</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        if (Model.CategoryId == StaticData.MobileNumbers_ID)
                        {
                            <h3 class="filter-title1">Operator</h3>
                            <select class="line-input-style13 change-color" id="operatorDL">
                                <option value="">All Operators</option>
                            </select>

                            <h3 class="filter-title1">Code</h3>
                            <select class="line-input-style13 change-color" id="mobileCodeDL">
                                <option value="">All Codes</option>
                            </select>

                            <h3 class="filter-title1">Mobile Plans</h3>
                            <select class="line-input-style13 change-color" id="numberPlanDL">
                                <option value="">All Mobile Plans</option>
                            </select>


                            <h3 class="filter-title1">Digits</h3>

                            <div style="margin-top:10px;"></div>


                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="allMobileDigits" />
                                <label class="change-color">All</label>
                            </div>


                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="mobileDigits3" />
                                <label class="change-color">3 digits similar</label>
                            </div>

                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="mobileDigits4" />
                                <label class="change-color">4 digits similar</label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="mobileDigits5" />
                                <label class="change-color">5 digits similar</label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="mobileDigits6" />
                                <label class="change-color">6 digits similar</label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="mobileDigits7" />
                                <label class="change-color">7 digits similar</label>
                            </div>

                            <br>
                        }

                        else if (Model.CategoryId == StaticData.PlateNumbers_ID)
                        {
                            <h3 class="filter-title1">Emirate</h3>
                            <select class="line-input-style13 change-color" id="emirateDL">
                                <option value="">All Emirates</option>
                            </select>

                            <h3 class="filter-title1">Plate Type</h3>
                            <select class="line-input-style13 change-color" id="plateTypeDL">
                                <option value="">All Plate Types</option>
                            </select>

                            <h3 class="filter-title1">Plate Code</h3>
                            <select class="line-input-style13 change-color" id="plateCodeDL">
                                <option value="">All Plate Codes</option>
                            </select>


                            <h3 class="filter-title1">Digits</h3>

                            <div style="margin-top:10px;"></div>



                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="plateDigits1" />
                                <label class="change-color">1 digit</label>
                            </div>

                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="plateDigits2" />
                                <label class="change-color">2 digits</label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="plateDigits3" />
                                <label class="change-color">3 digits </label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="plateDigits4" />
                                <label class="change-color">4 digits</label>
                            </div>
                            <div style="margin-left:15px;">
                                <input type="checkbox" style="display:inline;" id="plateDigits5" />
                                <label class="change-color">5 digits</label>
                            </div>

                            <br>
                        }

                        <h3 class="filter-title1">Price Range (in AED)</h3>
                        <div class="price-range-block">
                            <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                            <div style="margin:30px auto">
                                <input type="number" min=0 max="100000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                <span class="range-span">to</span>
                                <input type="number" min=0 max="100000000" oninput="validity.valid||(value='100000000');" id="max_price" class="line-input-style12" />
                            </div>
                        </div>


                    }
                    else if (Model.TypeId == StaticData.Jobs_ID)
                    {
                        <h3 class="filter-title1">Ad Posted</h3>
                        <select class="line-input-style13 change-color" id="postedInDL">
                            <option value="">All Times</option>
                            <option value="1">Today</option>
                            <option value="2">This week</option>
                            <option value="3">This month</option>
                            <option value="4">This year</option>
                        </select>


                        <h3 class="filter-title1">Employment Type</h3>
                        <select class="line-input-style13 change-color" id="commitmentDL">
                            <option value="">All Employment Types</option>
                        </select>


                        <h3 class="filter-title1">Job Role</h3>
                        <select class="line-input-style13 change-color" id="jobTypeDL">
                            <option value="">All Job Roles</option>
                        </select>

                        <h3 class="filter-title1">Work Experience</h3>
                        <select class="line-input-style13 change-color" id="workExperienceDL">
                            <option value="">Don't Care</option>
                        </select>

                        <h3 class="filter-title1">Education Level</h3>
                        <select class="line-input-style13 change-color" id="educationLevelDL">
                            <option value="">All education levels</option>
                        </select>
                    }
                    else if (Model.TypeId == StaticData.Properties_ID)
                    {
                        if (Model.CategoryId == StaticData.CommercialForRent_ID ||
                        Model.CategoryId == StaticData.ResidentialForRent_ID)
                        {
                            <h3 class="filter-title1">Annual Rent Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='1000000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>
                        }
                        else
                        {
                            <h3 class="filter-title1">Price Range (in AED)</h3>
                            <div class="price-range-block">
                                <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                                <div style="margin:30px auto">
                                    <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                    <span class="range-span">to</span>
                                    <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='1000000000');" id="max_price" class="line-input-style12" />
                                </div>
                            </div>
                        }

                        <h3 class="filter-title1">Size (in sqrt)</h3>
                        <div class="size-range-block">
                            <div id="slider-size-range" class="size-filter-range" name="rangeInput"></div>
                            <div style="margin:30px auto">
                                <input type="number" min=0 max="50000" oninput="validity.valid||(value='0');" id="min_size" class="line-input-style11" />
                                <span class="range-span">to</span>
                                <input type="number" min=0 max="50000" oninput="validity.valid||(value='50000');" id="max_size" class="line-input-style12" />
                            </div>
                        </div>

                        <h3 class="filter-title1">Services</h3>

                        <br />

                        <div style="padding-left: 25px;">

                            @if (Model.CategoryId == StaticData.ResidentialForRent_ID
|| Model.CategoryId == StaticData.ResidentialForSale_ID)
                            {
                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="balcony">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Balcony</label>

                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="builtInKitchenAppliances">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Built In Kitchen Appliances</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="buildInWardrobes">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Build In Wardrobes</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="walkInCloset">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Walk In Closet</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="conceirgeService">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Conceirge Service</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="maidService">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Maid Service</label>

                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="maidsRoom">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Maids Room</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="petsAllowed">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Pets Allowed</label>

                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="privateGarden">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Private Garden</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="privateGym">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Private Gym</label>

                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="privateJacuzzi">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Private Jacuzzi</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="privatePool">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Private Pool</label>

                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="security">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Security</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="sharedPool">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Shared Pool</label>

                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="studyRoom">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Study Room</label>
                                </div>

                                <br>
                            }
                            else if (Model.CategoryId == StaticData.CommercialForSale_ID ||
                                Model.CategoryId == StaticData.CommercialForRent_ID)
                            {
                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="availableNetworked">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Available Networked</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="conferenceRoom">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Conference Room</label>
                                </div>

                                <br>


                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="diningInBuilding">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Dining In Building</label>
                                </div>

                                <br>

                                <div class="row">
                                    <input type="checkbox" class="custom-checkbox" style="display:inline" id="retailInBuilding">
                                    <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Retail In Building</label>
                                </div>

                                <br>
                            }


                            <div class="row">
                                <input type="checkbox" id="centralACAndHeating">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Central AC And Heating</label>
                            </div>

                            <br>

                            <div class="row">
                                <input type="checkbox" class="custom-checkbox" style="display:inline" id="coveredParking">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Covered Parking</label>

                            </div>

                            <br>

                            <div class="row">
                                <input type="checkbox" class="custom-checkbox" style="display:inline" id="sharedGym">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Shared Gym</label>

                                <input type="checkbox" class="custom-checkbox" style="display:inline" id="sharedSpa">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">Shared Spa</label>
                            </div>

                            <br>



                            <div class="row">
                                <input type="checkbox" class="custom-checkbox" style="display:inline" id="viewOfLandmark">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">View Of Landmark</label>
                            </div>

                            <br />

                            <div class="row">
                                <input type="checkbox" class="custom-checkbox" style="display:inline" id="viewOfWater">
                                <label class="change-color" style="margin-left: 5px;margin-top:-5px;">View Of Water</label>
                            </div>

                        </div>

                        <br />


                        <h3 class="filter-title1">Furnishing</h3>
                        <select class="line-input-style13 change-color" id="furnishing">
                            <option value="">All Furnishing</option>
                            <option value="Furnished - مفروش">Furnished</option>
                            <option value="Not Furnished - غير مفروش">Not Furnished</option>
                        </select>

                        <h3 class="filter-title1">Listed By</h3>
                        <select class="line-input-style13 change-color" id="listedBy">
                            <option value="">All Listing</option>
                            <option value="0">Landlord</option>
                            <option value="1">Agent</option>
                        </select>

                    }
                    else if (Model.TypeId == StaticData.Business_ID)
                    {
                        <h3 class="filter-title2">Business</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        <h3 class="filter-title1">Sub Type</h3>
                        <select class="line-input-style13 change-color" id="subCategoryDL">
                            <option value="0">All Sub Types</option>
                        </select>

                        <div id="no-limit">
                            <h3 class="filter-title1">City</h3>
                            <select class="select2 line-input-style13 change-color" id="locationDL">
                                <option value="">All Cities</option>
                            </select>
                        </div>

                        <h3 class="filter-title1">Ad Posted</h3>
                        <select class="line-input-style13 change-color" id="postedInDL">
                            <option value="">All Times</option>
                            <option value="1">Today</option>
                            <option value="2">This week</option>
                            <option value="3">This month</option>
                            <option value="4">This year</option>
                        </select>

                        <h3 class="filter-title1">Price Range (in AED)</h3>
                        <div class="price-range-block">
                            <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                            <div style="margin:30px auto">
                                <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                <span class="range-span">to</span>
                                <input type="number" min=0 max="1000000000" oninput="validity.valid||(value='1000000000');" id="max_price" class="line-input-style12" />
                            </div>
                        </div>

                        @*if (Model.CategoryStatus == StaticData.OthersCategory_Status)
                            {
                                <h3 class="filter-title2">CategoryName</h3>
                                <input type="text" class="line-input-style13" id="categoryName">
                            }*@
                    }
                    else if (Model.TypeId == StaticData.Classifieds_ID)
                    {

                        var groupId = StaticFunctions.GetClassifiedGroup(Model.CategoryId);

                        <h3 class="filter-title2">Category</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        <h3 class="filter-title1">Sub Cateogry</h3>
                        <select class="line-input-style13 change-color" id="subCategoryDL">
                            <option value="">All Sub Categories</option>
                        </select>

                        <h3 class="filter-title1">Item Name</h3>
                        <select class="line-input-style13 change-color" id="subTypeDL">
                            <option value="">All Items</option>
                        </select>

                        if (groupId == 1)
                        {
                            <h3 class="filter-title1">Brand</h3>
                            <select class="line-input-style13 change-color" id="brandDL">
                                <option value="">All Brands</option>
                               
                            </select>
                        }

                        if (groupId == 1 || groupId == 2)
                        {
                            <h3 class="filter-title1">Usage</h3>
                            <select class="line-input-style13 change-color" id="usageDL">
                                <option value="">All Usages</option>
                            </select>

                            <h3 class="filter-title1">Age</h3>
                            <select class="line-input-style13 change-color" id="ageDL">
                                <option value="">All Ages</option>
                            </select>
                        }


                        <h3 class="filter-title1">Price Range (in AED)</h3>
                        <div class="price-range-block">
                            <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                            <div style="margin:30px auto">
                                <input type="number" min=0 max="1000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                <span class="range-span">to</span>
                                <input type="number" min=0 max="1000000" oninput="validity.valid||(value='1000000');" id="max_price" class="line-input-style12" />
                            </div>
                        </div>


                    }
                    else if (Model.TypeId == StaticData.Services_ID)
                    {
                        <h3 class="filter-title2">Category</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        if (Model.CategoryId != StaticData.CarLift_ID)
                        {
                            <h3 class="filter-title1">Sub Category</h3>
                            <select class="line-input-style13 change-color" id="subCategoryDL">
                                <option value="0">All Sub Categories</option>
                            </select>
                        }

                        <h3 class="filter-title1">Ad Posted</h3>
                        <select class="line-input-style13 change-color" id="postedInDL">
                            <option value="">All Times</option>
                            <option value="1">Today</option>
                            <option value="2">This week</option>
                            <option value="3">This month</option>
                            <option value="4">This year</option>
                        </select>

                    }
                    else if (Model.TypeId == StaticData.Electronics_ID)
                    {
                        <h3 class="filter-title2">Electronics</h3>
                        <input readonly type="text" class="line-input-style13" value="@Model.CategoryName">

                        <h3 class="filter-title1">Sub Category</h3>
                        <select class="line-input-style13 change-color" id="subCategoryDL">
                            <option value="0">All Sub Categories</option>
                        </select>

                        <h3 class="filter-title1">Trim</h3>
                        <select class="line-input-style13 change-color" id="subTypeDL">
                            <option value="0">All Trims</option>
                        </select>

                        <h3 class="filter-title1">Age</h3>
                        <select class="line-input-style13 change-color" id="ageDL">
                            <option value="">All Ages</option>
                        </select>

                        <h3 class="filter-title1">Warranty</h3>
                        <select class="line-input-style13 change-color" id="warranty">
                            <option value="">Don't Care</option>
                            <option value="true">Yes</option>
                            <option value="false">No</option>
                        </select>

                        <h3 class="filter-title1">Ad Posted</h3>
                        <select class="line-input-style13 change-color" id="postedInDL">
                            <option value="">All Times</option>
                            <option value="1">Today</option>
                            <option value="2">This week</option>
                            <option value="3">This month</option>
                            <option value="4">This year</option>
                        </select>

                        <h3 class="filter-title1">Price Range (in AED)</h3>
                        <div class="price-range-block">
                            <div id="slider-range" class="price-filter-range" name="rangeInput"></div>
                            <div style="margin:30px auto">
                                <input type="number" min=0 max="1000000" oninput="validity.valid||(value='0');" id="min_price" class="line-input-style11" />
                                <span class="range-span">to</span>
                                <input type="number" min=0 max="1000000" oninput="validity.valid||(value='1000000');" id="max_price" class="line-input-style12" />
                            </div>
                        </div>
                    }


                    @if (Model.TypeId != StaticData.Business_ID)
                    {
                        <div id="no-limit">
                            <h3 class="filter-title1">Location</h3>
                            <!-- if (Model.SearchLocation != "")
                            {
                                <select class="select2 line-input-style13 change-color" >
                                            <option value="">Model.SearchLocation</option>
                                            <!--</select>

                            }
                            else
                                            {-->
                            <select class="select2 line-input-style13 change-color" id="locationDL">
                                <option value="">All Locations</option>
                            </select>
                            <!--}-->

                        </div>
                    }

                    @*<h3 class="filter-title2">Keyword</h3>
                        <input type="text" class="line-input-style13" id="keyword">*@
                    <button type="button" class="change-btn6" name="button" onclick="ApplyFilters(@Model.CategoryId)">Apply Filters</button>
                    @*<a class="filter-a" href="#">Reset All</a>*@

                </div>
                <div class="bann-use-left">
                    <img onerror="this.src='/images/defaultAdImage.png'" src="~/assets/img/86.png" alt="">
                </div>

            </div>
            <div class="col-md-8">
                <div class="row">

                </div>
                <div class="col-md-9">


                    <h1 class="userAdTitle">@StaticFunctions.GetTypeName(Model.TypeId), @Model.CategoryName<span id="title"></span><span id="adCount" class="adsCount">(@Model.Ads.Count ADS)</span></h1>

                    <div class="bann-use">

                        <img onerror="this.src='/images/defaultAdImage.png'" src="~/assets/img/87.png" alt="">
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="filter-back">
                        <label class="change-color-filter">Sort by:</label>
                        <select class="noline-input-filter" id="sortBy">
                            <option value="0">Default</option>
                            <option value="@StaticData.Newest_To_Oldest">Newest to Oldest</option>
                            <option value="@StaticData.Oldest_To_Newest">Oldest to Newest</option>

                            @if (Model.TypeId != StaticData.Jobs_ID)
                            {
                                <option value="@StaticData.Price_Heighest_To_Lowest">Price Heighest to Lowest</option>
                                <option value="@StaticData.Price_Lowest_To_Heighest">Price Lowest to Heighest</option>
                            }

                        </select>
                    </div>
                </div>
                <div class="col-md-10">

                    <div id="ads">
                        <partial name="~/Views/Partials/_UserAd.cshtml" model="@Model.Ads" />
                    </div>

                    @*<div class="pagination" style="display:none">
                            <a href="#"><i class="fa fa-chevron-left" aria-hidden="true"></i></a>
                            <a href="#" class="active">1</a>
                            <a href="#">2</a>
                            <a href="#">3</a>
                            <a href="#">4</a>
                            <a href="#">5</a>
                            <a href="#">6</a>
                            <a href="#">7</a>
                            <a href="#">8</a>
                            <a href="#">9</a>
                            <a href="#">10</a>
                            <a href="#"><i class="fa fa-chevron-right" aria-hidden="true"></i></a>
                        </div>*@
                </div>
            </div>
            <div class="col-1">
                <div class="bann-use-right">
                    <img onerror="this.src='/images/defaultAdImage.png'" src="~/assets/img/84.png" alt="">
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/assets/price_range_script.js" type="text/javascript"></script>
    <script>

        var count = $('.featured-box2').length;

        if (count != 0) {
            $('.pagination').css("display", "inline-block");
        }

        const wrapper = document.getElementsByClassName('wrapper');
        const button = document.getElementById('click');
        const button2 = document.getElementById('click2');

        button.addEventListener('click', clicked);
        button2.addEventListener('click', clicked2);
        let scroll = 0;

        wrapper[0].addEventListener("scroll", function (event) {
            scroll = wrapper[0].scrollLeft;
        });

        function clicked() {
            scroll = scroll += 500;
            wrapper[0].scrollTo({
                left: scroll,
                behavior: 'smooth'
            });
            scroll = wrapper[0].scrollLeft + 50;
            console.log(wrapper[0].scrollLeft);
        }

        function clicked2() {
            scroll = scroll -= 500;
            wrapper[0].scrollTo({
                left: scroll,
                behavior: 'smooth'
            });
            scroll = wrapper[0].scrollLeft + 50;
            console.log(wrapper[0].scrollLeft);
        }

        $(document).ready(function () {
            $('#no-limit .select2').select2({
                multiple: "multiple",
            });

            $('#limit-2 .select2').select2({
                multiple: "multiple",
                maximumSelectionLength: 2,
            });

            $('#limit-2-custom-message .select2').select2({
                multiple: "multiple",
                maximumSelectionLength: 2,
                language: {
                    maximumSelected: (args) => args.maximum + ' 件しか選べないよ！'
                }
            });
        });

    </script>
    @if (Model.TypeId == StaticData.Motors_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 50000000,
                        values: [0, 50000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

        var makerDLloaded = false;
        $("#makerDL").on("click", function () {
            if (makerDLloaded)
                return;

            var categoryId = @Model.CategoryId;

            $.ajax({
                url: "/DropDowns/GetAllMotorMaker",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#makerDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            makerDLloaded = true;
        });

        $("#makerDL").on("change", function () {

            var categoryId = @Model.CategoryId;

            $('#modelDL option').remove();
            $("#modelDL").append(`<option value=''>All Models</option>`);

                $("#modelDL").val(null);
                var maker = $("#makerDL").val();
                $.ajax({
                    url: `/DropDowns/GetAllMotorModelByMaker?maker=${maker}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#modelDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
        });


        $("#modelDL").on("change", function () {
                $("#trimDL").val(null);
                var model = $("#modelDL").val();
                $.ajax({
                    url: `/DropDowns/GetAllMotorTrimByModel?model=${model}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#trimDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });

        });

        var specificationDLloaded = false;
        $("#specificationDL").on("click", function () {
            if (specificationDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllMotorRegionalSpecs",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#specificationDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            specificationDLloaded = true;
        });

        var colorDLloaded = false;
        $("#colorDL").on("click", function () {
            if (colorDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllColor",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#colorDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            colorDLloaded = true;
        });

        var fuelTypeDLloaded = false;
        $("#fuelTypeDL").on("click", function () {
            if (fuelTypeDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllFuelType",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#fuelTypeDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            fuelTypeDLloaded = true;
        });

        var HorsepowerDLloaded = false;
            $("#HorsepowerDL").on("click", function () {
                console.log("asd");
            if (HorsepowerDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllHorsepower?categoryId=@Model.CategoryId",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#HorsepowerDL").append(`<option value='${item.en_Text} ^ ${item.ar_Text}'>${item.en_Text}</option>`);

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            HorsepowerDLloaded = true;
        });


        var engineSizeDLloaded = false;
        $("#engineSizeDL").on("click", function () {
            if (engineSizeDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllEngineSize",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#engineSizeDL").append(`<option value='${item.value}'>${item.value}</option>`);

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            engineSizeDLloaded = true;
        });

        var ageDLloaded = false;
        $("#ageDL").on("click", function () {
            if (ageDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllAge?categoryId=@Model.CategoryId",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#ageDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            ageDLloaded = true;
        });

        var usageDLloaded = false;
        $("#usageDL").on("click", function () {
            if (usageDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllUsage?categoryId=@Model.CategoryId",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#usageDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            usageDLloaded = true;
        });

        var lengthDLloaded = false;
        $("#lengthDL").on("click", function () {
            if (lengthDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllLength",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#lengthDL").append(`<option value='${item.value}'>${item.value}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            lengthDLloaded = true;
        });

        var capacityDLloaded = false;
        $("#capacityDL").on("click", function () {
            if (capacityDLloaded)
                return;

            $.ajax({
                url: "/DropDowns/GetAllCapacity",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#capacityDL").append(`<option value='${item.value}'>${item.value}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            capacityDLloaded = true;
        });

        var wheelsDLloaded = false;
        $("#wheelsDL").on("click", function () {
            if (wheelsDLloaded)
                return;

            $.ajax({
                url: "/DropDowns/GetAllWheels",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#wheelsDL").append(`<option value='${item.value}'>${item.value}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            wheelsDLloaded = true;
        });

    var subCategoryDL = false;
    $("#subCategoryDL").on("click", function () {
        if (subCategoryDL)
            return;
        $.ajax({
            url: "/SubCategories/GetSubCategories?categoryId=@Model.CategoryId",
            method: "GET",
            success: function (response) {
                $.each(response.items, function (i, item) {
                    $("#subCategoryDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                });
            },
            error: function (error) {
                alert(error.message);
            }
        });
        subCategoryDL = true;
    });



        $("#subCategoryDL").on("change", function () {
            $("#subTypeDL").val(null);
            $("#subTypeDL option").remove();

            if (Parts_ID == @Model.CategoryId) {
                $("#subTypeDL").append(`<option value=''>All Makes</option>`);
                $("#partName").val(null);
                $("#partName option").remove();
                $("#partName").append(`<option value=''>All Parts</option>`);

            } else if (Bike_ID == @Model.CategoryId) {
                $("#subTypeDL").append(`<option value=''>All Makers</option>`);
            } else {
                $("#subTypeDL").append(`<option value=''>All Sub Categories</option>`);
            }

                if ($("#subCategoryDL").val() != "") {
                    var subCategoryId = $("#subCategoryDL").val();
                    $.ajax({
                        url: `/SubTypes/GetSubTypes?subCategoryId=${subCategoryId}`,
                        method: "GET",
                        success: function (response) {
                            $.each(response.items, function (i, item) {
                                $("#subTypeDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                            });
                        },
                        error: function (error) {
                            alert(error.message);
                        }
                    });

                }
        });

    $("#subTypeDL").on("change", function () {
        if (Parts_ID == @Model.CategoryId) {
            $("#partName").val(null);
            $("#partName option").remove();
            $("#partName").append(`<option value=''>All Parts</option>`);

            if ($("#subTypeDL").val() != "") {
                var subTypeId = $("#subTypeDL").val();
                console.log(subTypeId);
                $.ajax({
                    url: `/DropDowns/GetAllParts?subTypeId=${subTypeId}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#partName").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });

            }
        }
    });


        </script>
    }

    else if (Model.TypeId == StaticData.Numbers_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 100000000,
                        values: [0, 100000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

            var emirateDLloaded = false;
            $("#emirateDL").on("click", function () {
                if (emirateDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllEmirate",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#emirateDL").append(`<option value = '${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                emirateDLloaded = true;
            });


            $("#emirateDL").on("change", function () {
                $("#plateTypeDL option").not(':first').remove();
                $("#plateDesignDL option").not(':first').remove();
                $("#plateCodeDL option").not(':first').remove();
                var emirate = $("#emirateDL").val();
                $.ajax({
                    url: `/DropDowns/GetAllPlateTypeByEmirate?emirate=${emirate}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#plateTypeDL").append(`<option value ='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });

            });


            $("#plateTypeDL").on("change", function () {
                $("#plateDesignDL option").not(':first').remove();
                $("#plateCodeDL option").not(':first').remove();
                var plateType = $("#plateTypeDL").val();
                $.ajax({
                    url: `/DropDowns/GetAllPlateCodeByPlateType?plateType=${plateType}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#plateCodeDL").append(`<option value ='${item.value}'>${item.value}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });

                $.ajax({
                    url: `/DropDowns/GetAllPlateDesignByPlateType?plateType=${plateType}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#plateDesignDL").append(`<option value ='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
            });


            var operatorDLloaded = false;
            $("#operatorDL").on("click", function () {
                if (operatorDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllOperator",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#operatorDL").append(`<option value = '${item.en_Text} - ${item.ar_Text}' >${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                operatorDLloaded = true;
            });

            $("#operatorDL").on("change", function () {
                $("#mobileCodeDL option").not(':first').remove();
                var operator = $("#operatorDL").val();
                $.ajax({
                    url: `/DropDowns/GetAllMobileNumberCodeByOperator?operatorName=${operator}`,
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#mobileCodeDL").append(`<option value = '${item.value}'>${item.value}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
            });


            var numberPlanDLloaded = false;
            $("#numberPlanDL").on("click", function () {
                if (numberPlanDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllNumberPlans",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#numberPlanDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                numberPlanDLloaded = true;
            });

        </script>
    }

    else if (Model.TypeId == StaticData.Properties_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 1000000000,
                        values: [0, 1000000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });


        </script>
    }

    else if (Model.TypeId == StaticData.Jobs_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 2500000,
                        values: [0, 2500000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

            var jobTypeDLloaded = false;
            $("#jobTypeDL").on("click", function () {
                if (jobTypeDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllJobType",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#jobTypeDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                jobTypeDLloaded = true;
            });

            var commitmentDLloaded = false;
            $("#commitmentDL").on("click", function () {
                if (commitmentDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllEmploymentType",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#commitmentDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                commitmentDLloaded = true;
            });


            var workExperienceDLloaded = false;
            $("#workExperienceDL").on("click", function () {
                if (workExperienceDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllWorkExperience",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#workExperienceDL").append(`<option value='${item.en_Text} ^ ${item.ar_Text}'>${item.en_Text}</option>`);
                        });

                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                workExperienceDLloaded = true;
            });

            var educationLevelDLloaded = false;
            $("#educationLevelDL").on("click", function () {
                if (educationLevelDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllEducationLevel",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#educationLevelDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });

                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                educationLevelDLloaded = true;
            });


        </script>
    }

    else if (Model.TypeId == StaticData.Classifieds_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 1000000,
                        values: [0, 1000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

    var subCategoryDlLodaed = false;
    $("#subCategoryDL").on("click", function () {
        if (subCategoryDlLodaed)
            return;
        $.ajax({
            url: "/SubCategories/GetSubCategories?categoryId=@Model.CategoryId",
            method: "GET",
            success: function (response) {
                $.each(response.items, function (i, item) {
                    $("#subCategoryDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                });
            },
            error: function (error) {
                alert(error.message);
            }
        });
        subCategoryDlLodaed = true;
    });

        $("#subCategoryDL").on("change", function () {
            $("#subTypeDL").val(null);
            $("#subTypeDL option").remove();
            $("#subTypeDL").append(`<option value=''>All Items</option>`);

                if ($("#subCategoryDL").val() != "") {
                    var subCategoryId = $("#subCategoryDL").val();
                    $.ajax({
                        url: `/SubTypes/GetSubTypes?subCategoryId=${subCategoryId}`,
                        method: "GET",
                        success: function (response) {
                            $.each(response.items, function (i, item) {
                                $("#subTypeDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                            });
                        },
                        error: function (error) {
                            alert(error.message);
                        }
                    });

                }
        });

        var ageDLloaded = false;
        $("#ageDL").on("click", function () {
            if (ageDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllAgeByTypeId?typeId=@Model.TypeId",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#ageDL").append(`<option value='${item.en_Text} ^ ${item.ar_Text}'>${item.en_Text}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            ageDLloaded = true;
        });

        var usageDLloaded = false;
        $("#usageDL").on("click", function () {
            if (usageDLloaded)
                return;
            $.ajax({
                url: "/DropDowns/GetAllUsageByTypeId?typeId=@Model.TypeId",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {
                        $("#usageDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });
            usageDLloaded = true;
        });
        </script>
    }

    else if (Model.TypeId == StaticData.Services_ID)
    {
        <script>
            var subCategoryDLloaded = false;
            $("#subCategoryDL").on("click", function () {
                if (subCategoryDLloaded)
                    return;
                $.ajax({
                    url: "/SubCategories/GetSubCategories?categoryId=@Model.CategoryId",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#subCategoryDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                subCategoryDLloaded = true;
            });
        </script>
    }
    else if (Model.TypeId == StaticData.Electronics_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 1000000,
                        values: [0, 1000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

            var subCategoryDLloaded = false;
            $("#subCategoryDL").on("click", function () {
                if (subCategoryDLloaded)
                    return;
                $.ajax({
                    url: "/SubCategories/GetSubCategories?categoryId=@Model.CategoryId",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#subCategoryDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                subCategoryDLloaded = true;
            });


            $("#subCategoryDL").on("change", function () {

                    $("#subTypeDL option").remove();
                    $("#subTypeDL").append(`<option value=''>All Trims</option>`);

                    if ($("#subCategoryDL").val() != "0") {
                        var subCategoryId = $("#subCategoryDL").val();
                        $.ajax({
                            url: `/SubTypes/GetSubTypes?subCategoryId=${subCategoryId}`,
                            method: "GET",
                            success: function (response) {
                                $.each(response.items, function (i, item) {
                                    $("#subTypeDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                                });
                            },
                            error: function (error) {
                                alert(error.message);
                            }
                        });

                    }
            });

            var ageDLloaded = false;
            $("#ageDL").on("click", function () {
                if (ageDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllAge?categoryId=@Model.CategoryId",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#ageDL").append(`<option value='${item.en_Text} ^ ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                ageDLloaded = true;
            });

            var usageDLloaded = false;
            $("#usageDL").on("click", function () {
                if (usageDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllUsage",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#usageDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                usageDLloaded = true;
            });


        </script>
    }
    else if (Model.TypeId == StaticData.Business_ID)
    {
        <script>

            $(document).ready(function () {

                $("#min_price,#max_price").on('change', function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range > max_price_range) {
                        $('#max_price').val(min_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $("#min_price,#max_price").on("paste keyup", function () {

                    $('#price-range-submit').show();

                    var min_price_range = parseInt($("#min_price").val());

                    var max_price_range = parseInt($("#max_price").val());

                    if (min_price_range == max_price_range) {

                        max_price_range = min_price_range + 100;

                        $("#min_price").val(min_price_range);
                        $("#max_price").val(max_price_range);
                    }

                    $("#slider-range").slider({
                        values: [min_price_range, max_price_range]
                    });

                });


                $(function () {
                    $("#slider-range").slider({
                        range: true,
                        orientation: "horizontal",
                        min: 0,
                        max: 1000000000,
                        values: [0, 1000000000],
                        step: 100,
                        slide: function (event, ui) {
                            if (ui.values[0] == ui.values[1]) {
                                return false;
                            }

                            $("#min_price").val(ui.values[0]);
                            $("#max_price").val(ui.values[1]);
                        }
                    });

                    $("#min_price").val($("#slider-range").slider("values", 0));
                    $("#max_price").val($("#slider-range").slider("values", 1));

                });

                $("#slider-range,#price-range-submit").click(function () {

                    var min_price = $('#min_price').val();
                    var max_price = $('#max_price').val();

                    $("#searchResults").text("Here List of products will be shown which are cost between " + min_price + " " + "and" + " " + max_price + ".");
                });

            });

                        var subCategoryDLloaded = false;
            $("#subCategoryDL").on("click", function () {
                if (subCategoryDLloaded)
                    return;
                $.ajax({
                    url: "/SubCategories/GetSubCategories?categoryId=@Model.CategoryId",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#subCategoryDL").append(`<option value='${item.id}'>${item.en_Name}</option>`);
                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                subCategoryDLloaded = true;
            });
          

        </script>
    }

    <script>
        $(Document).ready(() => {
            console.log("in location ");
            var brandDLloaded = false;
            $("#brandDL").on("click", function () {
                if (brandDLloaded)
                    return;
                $.ajax({
                    url: "/DropDowns/GetAllClassifiedBrand",
                    method: "GET",
                    success: function (response) {
                        $.each(response.items, function (i, item) {
                            $("#brandDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);

                        });
                    },
                    error: function (error) {
                        alert(error.message);
                    }
                });
                brandDLloaded = true;
            });
            $.ajax({
                url: "/DropDowns/GetAllLocation",
                method: "GET",
                success: function (response) {
                    $.each(response.items, function (i, item) {

                        console.log("item", item)
                        if ('@Model.SearchLocation' != '' && ('@Model.SearchLocation'.includes(item.ar_Text) ||
                            '@Model.SearchLocation'.includes(item.en_Text))) {
                            console.log("if true")
                            $("#locationDL").append(`<option selected value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        } else {
                            $("#locationDL").append(`<option value='${item.en_Text} - ${item.ar_Text}'>${item.en_Text}</option>`);
                        }

                    });
                },
                error: function (error) {
                    alert(error.message);
                }
            });

        });

        $("#locationDL").on("change", function () {

            var locationValue = $("#locationDL").val();

            $("#saveTheSearchBtnContainer").empty();

            if ('@Model.SearchLocation' != '' && locationValue.includes('@Model.SearchLocation')) {

                $("#saveTheSearchBtnContainer").append(`<button class="saved-fil" disabled style="cursor: no-drop" id="saveTheSearchBtn">
                                    Saved
                    <i class= "fa fa-bookmark margin-bell" aria-hidden="true" ></i>
                                </button>`);
            } else {

                console.log("asd");

                $("#saveTheSearchBtnContainer").append(`<button class="saved-fil" data-toggle="modal" data-target="#myModal19" id="saveTheSearchBtn">
                                    Save
                                    <i class="far fa-bookmark margin-bell" aria-hidden="true"></i>
                                </button>`);
            }

    });

    function ApplyFilters(categoryId) {

        var typeId = @Model.TypeId;

        if (typeId == Motors_ID) {
                var data = {
                    FromPrice: $("#min_price").val(),
                    ToPrice: $("#max_price").val(),
                    FromYear: $("#min_year").val(),
                    ToYear: $("#max_year").val(),
                    FromKilometers: $("#min_km").val(),
                    ToKilometers: $("#max_km").val(),
                    Maker: $("#makerDL").val(),
                    Model: $("#modelDL").val(),
                    Trim: $("#trimDL").val(),
                    Horsepower: $("#HorsepowerDL").val(),
                    Age: $("#ageDL").val(),
                    Usage: $("#usageDL").val(),
                    PartName: $("#partName").val(),
                    SubCategoryId: $("#subCategoryDL").val(),
                    SubTypeId: $("#subTypeDL").val(),
                    Warranty: $("#warranty").val(),
                    Location: $("#locationDL").val(),
                    //Keyword: $("#keyword").val(),
                    CategoryId: categoryId,
                    SortBy: $("#sortBy").val()
                };

                $.ajax({
                    url: "/Motors/FilterMotors",
                    method: "POST",
                    data: JSON.stringify(data),
                    contentType: "application/json",
                    success: function (response) {
                        $("#ads").empty();
                        $("#ads").html(response);
                        var count = $('.featured-box2').length;

                        if (count != 0) {
                            $('.pagination').css("display", "inline-block");
                        } else {
                            $('.pagination').css("display", "none");
                        }

                        $("#title").text("");

                        var model = $("#modelDL").val();

                        if (model != "") {
                            model = model.split("-")[0];

                            $("#title").text($("#title").text() + ", " + model);

                        }

                        var location = $("#locationDL").val();

                        if (location != "") {
                            location = location.split("-")[0];

                            $("#title").text($("#title").text() + ", " + location);

                        }


                        $("#adCount").text(`(${count} ADS)`);
                        window.scrollTo({ top: 0, behavior: 'smooth' });
                    },
                    error: function (error) {
                        alert(error.message);
                        console.log(error);
                    }
                });
        }
        else if (typeId == Numbers_ID) {

            var data = {
                FromPrice: $("#min_price").val(),
                ToPrice: $("#max_price").val(),
                Emirate: $("#emirateDL").val(),
                Operator: $("#operatorDL").val(),
                PlateType: $("#plateTypeDL").val(),
                PlateCode: $("#plateCodeDL").val(),
                MobileCode: $("#mobileCodeDL").val(),
                NumberPlan: $("#numberPlanDL").val(),
                AllMobileDigits: $("#allMobileDigits").prop('checked'),
                MobileDigits3: $("#mobileDigits3").prop('checked') ? 3 : null,
                MobileDigits4: $("#mobileDigits4").prop('checked') ? 4 : null,
                MobileDigits5: $("#mobileDigits5").prop('checked') ? 5 : null,
                MobileDigits6: $("#mobileDigits6").prop('checked') ? 6 : null,
                MobileDigits7: $("#mobileDigits7").prop('checked') ? 7 : null,
                PlateDigits1: $("#plateDigits1").prop('checked') ? 1 : null,
                PlateDigits2: $("#plateDigits2").prop('checked') ? 2 : null,
                PlateDigits3: $("#plateDigits3").prop('checked') ? 3 : null,
                PlateDigits4: $("#plateDigits4").prop('checked') ? 4 : null,
                PlateDigits5: $("#plateDigits5").prop('checked') ? 5 : null,
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                CategoryId: categoryId,
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Numbers/FilterNumbers",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }


                    $("#title").text("");

                    var operator = $("#operatorDL").val();

                    if (operator != "") {
                        operator = operator.split("-")[0];

                        $("#title").text($("#title").text() + ", " + operator);

                    }

                    var plateType = $("#plateTypeDL").val();

                    if (plateType != "") {
                        plateType = plateType.split("-")[0];

                        $("#title").text($("#title").text() + ", " + plateType);

                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }

                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Jobs_ID) {

            var data = {
                PostedIn: $("#postedInDL").val(),
                Commitment: $("#commitmentDL").val(),
                JobType: $("#jobTypeDL").val(),
                WorkExperience: $("#workExperienceDL").val(),
                EducationLevel: $("#educationLevelDL").val(),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                CategoryId: categoryId,
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Jobs/FilterJobs",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    $("#title").text("");

                    var jobType = $("#jobTypeDL").val();

                    if (jobType != "") {
                        jobType = jobType.split("-")[0];

                        $("#title").text($("#title").text() + ", " + jobType);

                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }

                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Properties_ID) {

            var data = {
                FromPrice: $("#min_price").val(),
                ToPrice: $("#max_price").val(),
                FromAnnualRent: $("#min_price").val(),
                ToAnnualRent: $("#max_price").val(),
                FromSize: $("#min_size").val(),
                ToSize: $("#max_size").val(),
                Furnishing: $("#furnishing").val(),
                ListedBy: $("#listedBy").val(),
                balcony: $("#balcony").prop('checked'),
                builtInKitchenAppliances: $("#builtInKitchenAppliances").prop('checked'),
                buildInWardrobes: $("#buildInWardrobes").prop('checked'),
                walkInCloset: $("#walkInCloset").prop('checked'),
                centralACAndHeating: $("#centralACAndHeating").prop('checked'),
                conceirgeService: $("#conceirgeService").prop('checked'),
                coveredParking: $("#coveredParking").prop('checked'),
                maidService: $("#maidService").prop('checked'),
                maidsRoom: $("#maidsRoom").prop('checked'),
                petsAllowed: $("#petsAllowed").prop('checked'),
                privateGarden: $("#privateGarden").prop('checked'),
                privateGym: $("#privateGym").prop('checked'),
                privateJacuzzi: $("#privateJacuzzi").prop('checked'),
                privatePool: $("#privatePool").prop('checked'),
                security: $("#security").prop('checked'),
                sharedGym: $("#sharedGym").prop('checked'),
                sharedPool: $("#sharedPool").prop('checked'),
                sharedSpa: $("#sharedSpa").prop('checked'),
                studyRoom: $("#studyRoom").prop('checked'),
                viewOfLandmark: $("#viewOfLandmark").prop('checked'),
                viewOfWater: $("#viewOfWater").prop('checked'),
                availableNetworked: $("#availableNetworked").prop('checked'),
                conferenceRoom: $("#conferenceRoom").prop('checked'),
                diningInBuilding: $("#diningInBuilding").prop('checked'),
                retailInBuilding: $("#retailInBuilding").prop('checked'),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                CategoryId: categoryId,
                SortBy: $("#sortBy").val()
            };

            console.log(data);

            $.ajax({
                url: "/Properties/FilterProperities",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    var furnishing = $("#furnishing").val();

                    if (furnishing != "") {
                        furnishing = furnishing.split("-")[0];

                        $("#title").text($("#title").text() + ", " + furnishing);

                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }

                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Business_ID) {
            var data = {
                FromPrice: $("#min_price").val(),
                ToPrice: $("#max_price").val(),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                CategoryId: categoryId,
                SubCategoryId: $("subCategoryDL").val(),
                PostedIn: $("#postedInDL").val(),
                CategoryName: $("#categoryName").val(),
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Business/FilterBusiness",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }


                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Classifieds_ID) {
            var data = {
                FromPrice: $("#min_price").val(),
                ToPrice: $("#max_price").val(),
                Age: $("#ageDL").val(),
                Usage: $("#usageDL").val(),
                Brand: $("#brandDL").val(),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                CategoryId: categoryId,
                SubCategoryId: $("#subCategoryDL").val(),
                SubTypeId: $("#subTypeDL").val(),
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Classifieds/FilterClassifieds",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    var age = $("#ageDL").val();

                    if (age != "") {
                        age = age.split("-")[0];

                        $("#title").text($("#title").text() + ", " + age);

                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }


                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Services_ID) {
            var data = {
                CategoryId: categoryId,
                SubCategoryId: $("#subCategoryDL").val(),
                PostedIn: $("#postedInDL").val(),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Services/FilterServices",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }


                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        else if (typeId == Electronics_ID) {
            var data = {
                FromPrice: $("#min_price").val(),
                ToPrice: $("#max_price").val(),
                CategoryId: categoryId,
                SubCategoryId: $("#subCategoryDL").val(),
                SubTypeId: $("#subTypeDL").val(),
                Age: $("#ageDL").val(),
                Warranty: $("#warranty").val(),
                PostedIn: $("#postedInDL").val(),
                Location: $("#locationDL").val(),
                Keyword: $("#keyword").val(),
                SortBy: $("#sortBy").val()
            };

            $.ajax({
                url: "/Electronics/FilterElectronics",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    $("#ads").empty();
                    $("#ads").html(response);
                    var count = $('.featured-box2').length;

                    if (count != 0) {
                        $('.pagination').css("display", "inline-block");
                    } else {
                        $('.pagination').css("display", "none");
                    }

                    var usage = $("#usageDL").val();

                    if (usage != "") {
                        usage = usage.split("-")[0];

                        $("#title").text($("#title").text() + ", " + usage);

                    }

                    var location = $("#locationDL").val();

                    if (location != "") {
                        location = location.split("-")[0];

                        $("#title").text($("#title").text() + ", " + location);

                    }

                    $("#adCount").text(`(${count} ADS)`);
                    window.scrollTo({ top: 0, behavior: 'smooth' });
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        }


    function SaveFillters() {
        let data = {
            Location: $("#locationDL").val(),
            TypeId: @Model.TypeId,
            CategoryId: @Model.CategoryId
        };

        if (!data.Location || data.Location=='' ) {
            $("#saveSearchError").css("display", "block");
            $("#saveSearchErrorMessage").text("Please choose Location");
        } else {

            $.ajax({
                url: "/Ads/SaveFillters",
                method: "POST",
                data: JSON.stringify(data),
                contentType: "application/json",
                success: function (response) {
                    if (response.isSuccess===false){
                        
                        console.log("iin false");
                        $("#saveSearchError").css("display", "block");
                        $("#saveSearchErrorMessage").text(response.message);
                    }
                    else {
                       // $("#myModal19").modal("hide");

                        console.log("iin t");
                        var button = document.getElementById("closeMyModal19");
                        button.click();
                    }
                },
                error: function (error) {
                    alert(error.message);
                    console.log(error);
                }
            });
        }
        }
    </script>
}

